apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  interval: 1h
  releaseName: ingress-nginx
  chart:
    spec:
      chart: ingress-nginx
      version: "4.4.0"
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      service:
        enabled: true

        # -- If enabled is adding an appProtocol option for Kubernetes service. An appProtocol field replacing annotations that were
        # using for setting a backend protocol. Here is an example for AWS: service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
        # It allows choosing the protocol for each backend specified in the Kubernetes service.
        # See the following GitHub issue for more details about the purpose: https://github.com/kubernetes/kubernetes/issues/40244
        # Will be ignored for Kubernetes versions older than 1.20
        ##
        appProtocol: true

        annotations: { }
        labels: { }
        # clusterIP: ""

        # -- List of IP addresses at which the controller services are available
        ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
        ##
        externalIPs: [ ]

        # -- Used by cloud providers to connect the resulting `LoadBalancer` to a pre-existing static IP according to https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
        loadBalancerIP: ""
        loadBalancerSourceRanges: [ ]

        enableHttp: true
        enableHttps: true

        ## Set external traffic policy to: "Local" to preserve source IP on providers supporting it.
        ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
        # externalTrafficPolicy: ""

        ## Must be either "None" or "ClientIP" if set. Kubernetes will default to "None".
        ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
        # sessionAffinity: ""

        ## Specifies the health check node port (numeric port number) for the service. If healthCheckNodePort isn’t specified,
        ## the service controller allocates a port from your cluster’s NodePort range.
        ## Ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
        # healthCheckNodePort: 0

        # -- Represents the dual-stack-ness requested or required by this Service. Possible values are
        # SingleStack, PreferDualStack or RequireDualStack.
        # The ipFamilies and clusterIPs fields depend on the value of this field.
        ## Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/
        ipFamilyPolicy: "SingleStack"

        # -- List of IP families (e.g. IPv4, IPv6) assigned to the service. This field is usually assigned automatically
        # based on cluster configuration and the ipFamilyPolicy field.
        ## Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/
        ipFamilies:
          - IPv4

        ports:
          http: 80
          https: 443

        targetPorts:
          http: http
          https: https

        type: ClusterIP

        ## type: NodePort
        ## nodePorts:
        ##   http: 32080
        ##   https: 32443
        ##   tcp:
        ##     8080: 32808
        nodePorts:
          http: ""
          https: ""
          tcp: { }
          udp: { }

        external:
          enabled: true

        internal:
          # -- Enables an additional internal load balancer (besides the external one).
          enabled: false
          # -- Annotations are mandatory for the load balancer to come up. Varies with the cloud service.
          annotations: { }

          # loadBalancerIP: ""

          # -- Restrict access For LoadBalancer service. Defaults to 0.0.0.0/0.
          loadBalancerSourceRanges: [ ]

          ## Set external traffic policy to: "Local" to preserve source IP on
          ## providers supporting it
          ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
          # externalTrafficPolicy: ""
